image: node:latest

services:
  - postgres:latest
variables:
  POSTGRES_HOST: postgres
  POSTGRES_DB: postgres_test
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: example

stages:
  - build
  - test
  - deploy

cache:
  paths:
  - api/node_modules/

build_api:
  stage: build
  
  script:
    - cd api
    - npm install
  tags:
    - docker, postgres

build_web:
  stage: build
  script:
    - cd web
    - npm install
  tags:
    - docker, postgres

build_mobile:
  stage: build
  script:
    - cd mobile
    - npm install

test_api:
  stage: test
  variables:
    NODE_ENV: test
  services: 
    - postgres:latest  
  script:
    - cd api
    - npm install --save passport
    - npm install --save-dev eslint
    - npm test
    - npm run lint
  tags:
    - docker, postgres

test_web:
  stage: test
  variables:
    NODE_ENV: test
  script:
    - cd web
    - npm install --save-dev jest eslint eslint-plugin-react
    - npm test -- -u
    - npm run lint
  tags:
    - docker, postgres

test_mobile:
  stage: test
  variables:
    NODE_ENV: test
  script:
    - cd mobile
    - npm install --save-dev jest eslint eslint-plugin-react eslint-plugin-react-native babel-eslint jest-expo
    - npm test -- -u
    - npm run lint
  tags:
    - docker, postgres

staging:
  stage: deploy
  only:
    - dev
  script:
    - sudo apt-get install -y python-pip
    - pip install docker-compose
    - docker-compose up -d --build
  environment: staging
  when: manual
  tags:
    - staging

production:
  stage: deploy
  only:
    - master
  script:
    - sudo apt-get install -y python-pip
    - pip install docker-compose
    - docker-compose up -d --build
  environment: production
  when: manual
  tags:
    - production