// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App snapshot renders correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <Modal
    animationType="fade"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "rgba(0,0,0,0.4)",
          "flex": 1,
          "justifyContent": "flex-end",
          "opacity": 1,
        }
      }
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "#fff",
            "elevation": 4,
            "height": NaN,
            "maxHeight": 667,
            "minHeight": 56,
            "opacity": 1,
            "padding": 15,
          }
        }
      />
    </View>
  </Modal>
</View>
`;

exports[`App snapshot renders correctly with events 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SearchScreen
    navigation={
      Object {
        "getParam": [MockFunction],
      }
    }
    screenProps={
      Object {
        "language": "PT",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <CustomHeader
          language="PT"
        />,
        <ScrollViewMock
          refreshControl={
            <RefreshControlMock
              onRefresh={[Function]}
              refreshing={false}
            />
          }
          stickyHeaderIndices={
            Array [
              2,
            ]
          }
          style={
            Object {
              "backgroundColor": "#7C8589",
              "height": "100%",
            }
          }
        >
          <Styled(ViewNB)
            style={
              Object {
                "backgroundColor": "#7C8589",
                "marginHorizontal": "5%",
                "paddingBottom": "2%",
                "paddingTop": "5%",
              }
            }
          >
            <Styled(Text)
              style={
                Object {
                  "color": "white",
                  "fontFamily": "OpenSans-Regular",
                  "fontSize": 32,
                  "textAlign": "center",
                }
              }
            >
              Pesquisa
            </Styled(Text)>
            <Styled(ViewNB)
              style={
                Object {
                  "backgroundColor": "#7C8589",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": "5%",
                }
              }
            >
              <Styled(ViewNB)
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <Styled(Text)>
                   
                </Styled(Text)>
              </Styled(ViewNB)>
              <Styled(ViewNB)
                style={
                  Object {
                    "flex": 5,
                  }
                }
              >
                <Styled(Item)
                  style={
                    Object {
                      "borderBottomWidth": 3,
                      "borderColor": "white",
                      "height": 30,
                    }
                  }
                >
                  <Styled(Input)
                    className="search-input"
                    onChangeText={[Function]}
                    style={
                      Object {
                        "backgroundColor": "#7C8589",
                        "borderColor": "white",
                        "borderLeftWidth": 0,
                        "borderRightWidth": 0,
                        "borderTopWidth": 0,
                        "borderWidth": 2,
                        "color": "white",
                        "fontSize": 20,
                        "height": 30,
                        "width": "100%",
                      }
                    }
                  />
                  <Styled(Icon)
                    name="search"
                    style={
                      Object {
                        "color": "white",
                        "fontSize": 20,
                      }
                    }
                    type="FontAwesome"
                  />
                </Styled(Item)>
              </Styled(ViewNB)>
              <Styled(ViewNB)
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <Styled(Text)>
                   
                </Styled(Text)>
              </Styled(ViewNB)>
            </Styled(ViewNB)>
          </Styled(ViewNB)>
          <Styled(ViewNB)
            style={
              Object {
                "backgroundColor": "#7C8589",
                "marginHorizontal": "2%",
              }
            }
          >
            <Styled(Card)>
              <Styled(ViewNB)
                style={
                  Object {
                    "alignItems": "center",
                    "justifyContent": "center",
                    "marginVertical": "5%",
                  }
                }
              >
                <Styled(Icon)
                  name="info"
                  type="Feather"
                />
                <Styled(Text)>
                  Não há eventos para a pesquisa feita.
                </Styled(Text)>
              </Styled(ViewNB)>
            </Styled(Card)>
          </Styled(ViewNB)>
        </ScrollViewMock>,
      ],
      "style": Object {
        "backgroundColor": "#7C8589",
      },
      "virtual": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "language": "PT",
          "toggleLanguage": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Styled(ViewNB)
              style={
                Object {
                  "backgroundColor": "#7C8589",
                  "marginHorizontal": "5%",
                  "paddingBottom": "2%",
                  "paddingTop": "5%",
                }
              }
            >
              <Styled(Text)
                style={
                  Object {
                    "color": "white",
                    "fontFamily": "OpenSans-Regular",
                    "fontSize": 32,
                    "textAlign": "center",
                  }
                }
              >
                Pesquisa
              </Styled(Text)>
              <Styled(ViewNB)
                style={
                  Object {
                    "backgroundColor": "#7C8589",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": "5%",
                  }
                }
              >
                <Styled(ViewNB)
                  style={
                    Object {
                      "flex": 1,
                    }
                  }
                >
                  <Styled(Text)>
                     
                  </Styled(Text)>
                </Styled(ViewNB)>
                <Styled(ViewNB)
                  style={
                    Object {
                      "flex": 5,
                    }
                  }
                >
                  <Styled(Item)
                    style={
                      Object {
                        "borderBottomWidth": 3,
                        "borderColor": "white",
                        "height": 30,
                      }
                    }
                  >
                    <Styled(Input)
                      className="search-input"
                      onChangeText={[Function]}
                      style={
                        Object {
                          "backgroundColor": "#7C8589",
                          "borderColor": "white",
                          "borderLeftWidth": 0,
                          "borderRightWidth": 0,
                          "borderTopWidth": 0,
                          "borderWidth": 2,
                          "color": "white",
                          "fontSize": 20,
                          "height": 30,
                          "width": "100%",
                        }
                      }
                    />
                    <Styled(Icon)
                      name="search"
                      style={
                        Object {
                          "color": "white",
                          "fontSize": 20,
                        }
                      }
                      type="FontAwesome"
                    />
                  </Styled(Item)>
                </Styled(ViewNB)>
                <Styled(ViewNB)
                  style={
                    Object {
                      "flex": 1,
                    }
                  }
                >
                  <Styled(Text)>
                     
                  </Styled(Text)>
                </Styled(ViewNB)>
              </Styled(ViewNB)>
            </Styled(ViewNB)>,
            <Styled(ViewNB)
              style={
                Object {
                  "backgroundColor": "#7C8589",
                  "marginHorizontal": "2%",
                }
              }
            >
              <Styled(Card)>
                <Styled(ViewNB)
                  style={
                    Object {
                      "alignItems": "center",
                      "justifyContent": "center",
                      "marginVertical": "5%",
                    }
                  }
                >
                  <Styled(Icon)
                    name="info"
                    type="Feather"
                  />
                  <Styled(Text)>
                    Não há eventos para a pesquisa feita.
                  </Styled(Text)>
                </Styled(ViewNB)>
              </Styled(Card)>
            </Styled(ViewNB)>,
          ],
          "refreshControl": <RefreshControlMock
            onRefresh={[Function]}
            refreshing={false}
          />,
          "stickyHeaderIndices": Array [
            2,
          ],
          "style": Object {
            "backgroundColor": "#7C8589",
            "height": "100%",
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Styled(Text)
                  style={
                    Object {
                      "color": "white",
                      "fontFamily": "OpenSans-Regular",
                      "fontSize": 32,
                      "textAlign": "center",
                    }
                  }
                >
                  Pesquisa
                </Styled(Text)>,
                <Styled(ViewNB)
                  style={
                    Object {
                      "backgroundColor": "#7C8589",
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "paddingBottom": "5%",
                    }
                  }
                >
                  <Styled(ViewNB)
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                  >
                    <Styled(Text)>
                       
                    </Styled(Text)>
                  </Styled(ViewNB)>
                  <Styled(ViewNB)
                    style={
                      Object {
                        "flex": 5,
                      }
                    }
                  >
                    <Styled(Item)
                      style={
                        Object {
                          "borderBottomWidth": 3,
                          "borderColor": "white",
                          "height": 30,
                        }
                      }
                    >
                      <Styled(Input)
                        className="search-input"
                        onChangeText={[Function]}
                        style={
                          Object {
                            "backgroundColor": "#7C8589",
                            "borderColor": "white",
                            "borderLeftWidth": 0,
                            "borderRightWidth": 0,
                            "borderTopWidth": 0,
                            "borderWidth": 2,
                            "color": "white",
                            "fontSize": 20,
                            "height": 30,
                            "width": "100%",
                          }
                        }
                      />
                      <Styled(Icon)
                        name="search"
                        style={
                          Object {
                            "color": "white",
                            "fontSize": 20,
                          }
                        }
                        type="FontAwesome"
                      />
                    </Styled(Item)>
                  </Styled(ViewNB)>
                  <Styled(ViewNB)
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                  >
                    <Styled(Text)>
                       
                    </Styled(Text)>
                  </Styled(ViewNB)>
                </Styled(ViewNB)>,
              ],
              "style": Object {
                "backgroundColor": "#7C8589",
                "marginHorizontal": "5%",
                "paddingBottom": "2%",
                "paddingTop": "5%",
              },
              "virtual": undefined,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Pesquisa",
                  "style": Object {
                    "color": "white",
                    "fontFamily": "OpenSans-Regular",
                    "fontSize": 32,
                    "textAlign": "center",
                  },
                  "virtual": undefined,
                },
                "ref": null,
                "rendered": "Pesquisa",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <Styled(ViewNB)
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <Styled(Text)>
                         
                      </Styled(Text)>
                    </Styled(ViewNB)>,
                    <Styled(ViewNB)
                      style={
                        Object {
                          "flex": 5,
                        }
                      }
                    >
                      <Styled(Item)
                        style={
                          Object {
                            "borderBottomWidth": 3,
                            "borderColor": "white",
                            "height": 30,
                          }
                        }
                      >
                        <Styled(Input)
                          className="search-input"
                          onChangeText={[Function]}
                          style={
                            Object {
                              "backgroundColor": "#7C8589",
                              "borderColor": "white",
                              "borderLeftWidth": 0,
                              "borderRightWidth": 0,
                              "borderTopWidth": 0,
                              "borderWidth": 2,
                              "color": "white",
                              "fontSize": 20,
                              "height": 30,
                              "width": "100%",
                            }
                          }
                        />
                        <Styled(Icon)
                          name="search"
                          style={
                            Object {
                              "color": "white",
                              "fontSize": 20,
                            }
                          }
                          type="FontAwesome"
                        />
                      </Styled(Item)>
                    </Styled(ViewNB)>,
                    <Styled(ViewNB)
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <Styled(Text)>
                         
                      </Styled(Text)>
                    </Styled(ViewNB)>,
                  ],
                  "style": Object {
                    "backgroundColor": "#7C8589",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": "5%",
                  },
                  "virtual": undefined,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <Styled(Text)>
                         
                      </Styled(Text)>,
                      "style": Object {
                        "flex": 1,
                      },
                      "virtual": undefined,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": " ",
                        "virtual": undefined,
                      },
                      "ref": null,
                      "rendered": " ",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <Styled(Item)
                        style={
                          Object {
                            "borderBottomWidth": 3,
                            "borderColor": "white",
                            "height": 30,
                          }
                        }
                      >
                        <Styled(Input)
                          className="search-input"
                          onChangeText={[Function]}
                          style={
                            Object {
                              "backgroundColor": "#7C8589",
                              "borderColor": "white",
                              "borderLeftWidth": 0,
                              "borderRightWidth": 0,
                              "borderTopWidth": 0,
                              "borderWidth": 2,
                              "color": "white",
                              "fontSize": 20,
                              "height": 30,
                              "width": "100%",
                            }
                          }
                        />
                        <Styled(Icon)
                          name="search"
                          style={
                            Object {
                              "color": "white",
                              "fontSize": 20,
                            }
                          }
                          type="FontAwesome"
                        />
                      </Styled(Item)>,
                      "style": Object {
                        "flex": 5,
                      },
                      "virtual": undefined,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": Array [
                          <Styled(Input)
                            className="search-input"
                            onChangeText={[Function]}
                            style={
                              Object {
                                "backgroundColor": "#7C8589",
                                "borderColor": "white",
                                "borderLeftWidth": 0,
                                "borderRightWidth": 0,
                                "borderTopWidth": 0,
                                "borderWidth": 2,
                                "color": "white",
                                "fontSize": 20,
                                "height": 30,
                                "width": "100%",
                              }
                            }
                          />,
                          <Styled(Icon)
                            name="search"
                            style={
                              Object {
                                "color": "white",
                                "fontSize": 20,
                              }
                            }
                            type="FontAwesome"
                          />,
                        ],
                        "style": Object {
                          "borderBottomWidth": 3,
                          "borderColor": "white",
                          "height": 30,
                        },
                        "virtual": undefined,
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "className": "search-input",
                            "onChangeText": [Function],
                            "style": Object {
                              "backgroundColor": "#7C8589",
                              "borderColor": "white",
                              "borderLeftWidth": 0,
                              "borderRightWidth": 0,
                              "borderTopWidth": 0,
                              "borderWidth": 2,
                              "color": "white",
                              "fontSize": 20,
                              "height": 30,
                              "width": "100%",
                            },
                            "virtual": undefined,
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "name": "search",
                            "style": Object {
                              "color": "white",
                              "fontSize": 20,
                            },
                            "type": "FontAwesome",
                            "virtual": undefined,
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                      ],
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <Styled(Text)>
                         
                      </Styled(Text)>,
                      "style": Object {
                        "flex": 1,
                      },
                      "virtual": undefined,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": " ",
                        "virtual": undefined,
                      },
                      "ref": null,
                      "rendered": " ",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                Array [],
                <Styled(Card)>
                  <Styled(ViewNB)
                    style={
                      Object {
                        "alignItems": "center",
                        "justifyContent": "center",
                        "marginVertical": "5%",
                      }
                    }
                  >
                    <Styled(Icon)
                      name="info"
                      type="Feather"
                    />
                    <Styled(Text)>
                      Não há eventos para a pesquisa feita.
                    </Styled(Text)>
                  </Styled(ViewNB)>
                </Styled(Card)>,
              ],
              "style": Object {
                "backgroundColor": "#7C8589",
                "marginHorizontal": "2%",
              },
              "virtual": undefined,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <Styled(ViewNB)
                    style={
                      Object {
                        "alignItems": "center",
                        "justifyContent": "center",
                        "marginVertical": "5%",
                      }
                    }
                  >
                    <Styled(Icon)
                      name="info"
                      type="Feather"
                    />
                    <Styled(Text)>
                      Não há eventos para a pesquisa feita.
                    </Styled(Text)>
                  </Styled(ViewNB)>,
                  "virtual": undefined,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <Styled(Icon)
                        name="info"
                        type="Feather"
                      />,
                      <Styled(Text)>
                        Não há eventos para a pesquisa feita.
                      </Styled(Text)>,
                    ],
                    "style": Object {
                      "alignItems": "center",
                      "justifyContent": "center",
                      "marginVertical": "5%",
                    },
                    "virtual": undefined,
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "name": "info",
                        "type": "Feather",
                        "virtual": undefined,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "Não há eventos para a pesquisa feita.",
                        "virtual": undefined,
                      },
                      "ref": null,
                      "rendered": "Não há eventos para a pesquisa feita.",
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [MockFunction] {
          "calls": Array [
            Array [
              Object {
                "children": Array [],
                "data": Array [],
                "disableVirtualization": false,
                "getItem": [Function],
                "getItemCount": [Function],
                "horizontal": false,
                "initialNumToRender": 10,
                "invertStickyHeaders": undefined,
                "keyExtractor": [Function],
                "maxToRenderPerBatch": 10,
                "numColumns": 1,
                "onContentSizeChange": [Function],
                "onEndReachedThreshold": 2,
                "onLayout": [Function],
                "onMomentumScrollEnd": [Function],
                "onScroll": [Function],
                "onScrollBeginDrag": [Function],
                "onScrollEndDrag": [Function],
                "renderItem": [Function],
                "scrollEventThrottle": 50,
                "stickyHeaderIndices": Array [],
                "style": Object {
                  "marginHorizontal": -15,
                  "marginTop": 0,
                },
                "updateCellsBatchingPeriod": 50,
                "viewabilityConfigCallbackPairs": Array [],
                "windowSize": 21,
              },
              Object {},
            ],
          ],
          "results": Array [
            Object {
              "isThrow": false,
              "value": undefined,
            },
          ],
        },
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <CustomHeader
            language="PT"
          />,
          <ScrollViewMock
            refreshControl={
              <RefreshControlMock
                onRefresh={[Function]}
                refreshing={false}
              />
            }
            stickyHeaderIndices={
              Array [
                2,
              ]
            }
            style={
              Object {
                "backgroundColor": "#7C8589",
                "height": "100%",
              }
            }
          >
            <Styled(ViewNB)
              style={
                Object {
                  "backgroundColor": "#7C8589",
                  "marginHorizontal": "5%",
                  "paddingBottom": "2%",
                  "paddingTop": "5%",
                }
              }
            >
              <Styled(Text)
                style={
                  Object {
                    "color": "white",
                    "fontFamily": "OpenSans-Regular",
                    "fontSize": 32,
                    "textAlign": "center",
                  }
                }
              >
                Pesquisa
              </Styled(Text)>
              <Styled(ViewNB)
                style={
                  Object {
                    "backgroundColor": "#7C8589",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": "5%",
                  }
                }
              >
                <Styled(ViewNB)
                  style={
                    Object {
                      "flex": 1,
                    }
                  }
                >
                  <Styled(Text)>
                     
                  </Styled(Text)>
                </Styled(ViewNB)>
                <Styled(ViewNB)
                  style={
                    Object {
                      "flex": 5,
                    }
                  }
                >
                  <Styled(Item)
                    style={
                      Object {
                        "borderBottomWidth": 3,
                        "borderColor": "white",
                        "height": 30,
                      }
                    }
                  >
                    <Styled(Input)
                      className="search-input"
                      onChangeText={[Function]}
                      style={
                        Object {
                          "backgroundColor": "#7C8589",
                          "borderColor": "white",
                          "borderLeftWidth": 0,
                          "borderRightWidth": 0,
                          "borderTopWidth": 0,
                          "borderWidth": 2,
                          "color": "white",
                          "fontSize": 20,
                          "height": 30,
                          "width": "100%",
                        }
                      }
                    />
                    <Styled(Icon)
                      name="search"
                      style={
                        Object {
                          "color": "white",
                          "fontSize": 20,
                        }
                      }
                      type="FontAwesome"
                    />
                  </Styled(Item)>
                </Styled(ViewNB)>
                <Styled(ViewNB)
                  style={
                    Object {
                      "flex": 1,
                    }
                  }
                >
                  <Styled(Text)>
                     
                  </Styled(Text)>
                </Styled(ViewNB)>
              </Styled(ViewNB)>
            </Styled(ViewNB)>
            <Styled(ViewNB)
              style={
                Object {
                  "backgroundColor": "#7C8589",
                  "marginHorizontal": "2%",
                }
              }
            >
              <Styled(Card)>
                <Styled(ViewNB)
                  style={
                    Object {
                      "alignItems": "center",
                      "justifyContent": "center",
                      "marginVertical": "5%",
                    }
                  }
                >
                  <Styled(Icon)
                    name="info"
                    type="Feather"
                  />
                  <Styled(Text)>
                    Não há eventos para a pesquisa feita.
                  </Styled(Text)>
                </Styled(ViewNB)>
              </Styled(Card)>
            </Styled(ViewNB)>
          </ScrollViewMock>,
        ],
        "style": Object {
          "backgroundColor": "#7C8589",
        },
        "virtual": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "language": "PT",
            "toggleLanguage": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Styled(ViewNB)
                style={
                  Object {
                    "backgroundColor": "#7C8589",
                    "marginHorizontal": "5%",
                    "paddingBottom": "2%",
                    "paddingTop": "5%",
                  }
                }
              >
                <Styled(Text)
                  style={
                    Object {
                      "color": "white",
                      "fontFamily": "OpenSans-Regular",
                      "fontSize": 32,
                      "textAlign": "center",
                    }
                  }
                >
                  Pesquisa
                </Styled(Text)>
                <Styled(ViewNB)
                  style={
                    Object {
                      "backgroundColor": "#7C8589",
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "paddingBottom": "5%",
                    }
                  }
                >
                  <Styled(ViewNB)
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                  >
                    <Styled(Text)>
                       
                    </Styled(Text)>
                  </Styled(ViewNB)>
                  <Styled(ViewNB)
                    style={
                      Object {
                        "flex": 5,
                      }
                    }
                  >
                    <Styled(Item)
                      style={
                        Object {
                          "borderBottomWidth": 3,
                          "borderColor": "white",
                          "height": 30,
                        }
                      }
                    >
                      <Styled(Input)
                        className="search-input"
                        onChangeText={[Function]}
                        style={
                          Object {
                            "backgroundColor": "#7C8589",
                            "borderColor": "white",
                            "borderLeftWidth": 0,
                            "borderRightWidth": 0,
                            "borderTopWidth": 0,
                            "borderWidth": 2,
                            "color": "white",
                            "fontSize": 20,
                            "height": 30,
                            "width": "100%",
                          }
                        }
                      />
                      <Styled(Icon)
                        name="search"
                        style={
                          Object {
                            "color": "white",
                            "fontSize": 20,
                          }
                        }
                        type="FontAwesome"
                      />
                    </Styled(Item)>
                  </Styled(ViewNB)>
                  <Styled(ViewNB)
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                  >
                    <Styled(Text)>
                       
                    </Styled(Text)>
                  </Styled(ViewNB)>
                </Styled(ViewNB)>
              </Styled(ViewNB)>,
              <Styled(ViewNB)
                style={
                  Object {
                    "backgroundColor": "#7C8589",
                    "marginHorizontal": "2%",
                  }
                }
              >
                <Styled(Card)>
                  <Styled(ViewNB)
                    style={
                      Object {
                        "alignItems": "center",
                        "justifyContent": "center",
                        "marginVertical": "5%",
                      }
                    }
                  >
                    <Styled(Icon)
                      name="info"
                      type="Feather"
                    />
                    <Styled(Text)>
                      Não há eventos para a pesquisa feita.
                    </Styled(Text)>
                  </Styled(ViewNB)>
                </Styled(Card)>
              </Styled(ViewNB)>,
            ],
            "refreshControl": <RefreshControlMock
              onRefresh={[Function]}
              refreshing={false}
            />,
            "stickyHeaderIndices": Array [
              2,
            ],
            "style": Object {
              "backgroundColor": "#7C8589",
              "height": "100%",
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Styled(Text)
                    style={
                      Object {
                        "color": "white",
                        "fontFamily": "OpenSans-Regular",
                        "fontSize": 32,
                        "textAlign": "center",
                      }
                    }
                  >
                    Pesquisa
                  </Styled(Text)>,
                  <Styled(ViewNB)
                    style={
                      Object {
                        "backgroundColor": "#7C8589",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "paddingBottom": "5%",
                      }
                    }
                  >
                    <Styled(ViewNB)
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <Styled(Text)>
                         
                      </Styled(Text)>
                    </Styled(ViewNB)>
                    <Styled(ViewNB)
                      style={
                        Object {
                          "flex": 5,
                        }
                      }
                    >
                      <Styled(Item)
                        style={
                          Object {
                            "borderBottomWidth": 3,
                            "borderColor": "white",
                            "height": 30,
                          }
                        }
                      >
                        <Styled(Input)
                          className="search-input"
                          onChangeText={[Function]}
                          style={
                            Object {
                              "backgroundColor": "#7C8589",
                              "borderColor": "white",
                              "borderLeftWidth": 0,
                              "borderRightWidth": 0,
                              "borderTopWidth": 0,
                              "borderWidth": 2,
                              "color": "white",
                              "fontSize": 20,
                              "height": 30,
                              "width": "100%",
                            }
                          }
                        />
                        <Styled(Icon)
                          name="search"
                          style={
                            Object {
                              "color": "white",
                              "fontSize": 20,
                            }
                          }
                          type="FontAwesome"
                        />
                      </Styled(Item)>
                    </Styled(ViewNB)>
                    <Styled(ViewNB)
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <Styled(Text)>
                         
                      </Styled(Text)>
                    </Styled(ViewNB)>
                  </Styled(ViewNB)>,
                ],
                "style": Object {
                  "backgroundColor": "#7C8589",
                  "marginHorizontal": "5%",
                  "paddingBottom": "2%",
                  "paddingTop": "5%",
                },
                "virtual": undefined,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Pesquisa",
                    "style": Object {
                      "color": "white",
                      "fontFamily": "OpenSans-Regular",
                      "fontSize": 32,
                      "textAlign": "center",
                    },
                    "virtual": undefined,
                  },
                  "ref": null,
                  "rendered": "Pesquisa",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <Styled(ViewNB)
                        style={
                          Object {
                            "flex": 1,
                          }
                        }
                      >
                        <Styled(Text)>
                           
                        </Styled(Text)>
                      </Styled(ViewNB)>,
                      <Styled(ViewNB)
                        style={
                          Object {
                            "flex": 5,
                          }
                        }
                      >
                        <Styled(Item)
                          style={
                            Object {
                              "borderBottomWidth": 3,
                              "borderColor": "white",
                              "height": 30,
                            }
                          }
                        >
                          <Styled(Input)
                            className="search-input"
                            onChangeText={[Function]}
                            style={
                              Object {
                                "backgroundColor": "#7C8589",
                                "borderColor": "white",
                                "borderLeftWidth": 0,
                                "borderRightWidth": 0,
                                "borderTopWidth": 0,
                                "borderWidth": 2,
                                "color": "white",
                                "fontSize": 20,
                                "height": 30,
                                "width": "100%",
                              }
                            }
                          />
                          <Styled(Icon)
                            name="search"
                            style={
                              Object {
                                "color": "white",
                                "fontSize": 20,
                              }
                            }
                            type="FontAwesome"
                          />
                        </Styled(Item)>
                      </Styled(ViewNB)>,
                      <Styled(ViewNB)
                        style={
                          Object {
                            "flex": 1,
                          }
                        }
                      >
                        <Styled(Text)>
                           
                        </Styled(Text)>
                      </Styled(ViewNB)>,
                    ],
                    "style": Object {
                      "backgroundColor": "#7C8589",
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "paddingBottom": "5%",
                    },
                    "virtual": undefined,
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <Styled(Text)>
                           
                        </Styled(Text)>,
                        "style": Object {
                          "flex": 1,
                        },
                        "virtual": undefined,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": " ",
                          "virtual": undefined,
                        },
                        "ref": null,
                        "rendered": " ",
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <Styled(Item)
                          style={
                            Object {
                              "borderBottomWidth": 3,
                              "borderColor": "white",
                              "height": 30,
                            }
                          }
                        >
                          <Styled(Input)
                            className="search-input"
                            onChangeText={[Function]}
                            style={
                              Object {
                                "backgroundColor": "#7C8589",
                                "borderColor": "white",
                                "borderLeftWidth": 0,
                                "borderRightWidth": 0,
                                "borderTopWidth": 0,
                                "borderWidth": 2,
                                "color": "white",
                                "fontSize": 20,
                                "height": 30,
                                "width": "100%",
                              }
                            }
                          />
                          <Styled(Icon)
                            name="search"
                            style={
                              Object {
                                "color": "white",
                                "fontSize": 20,
                              }
                            }
                            type="FontAwesome"
                          />
                        </Styled(Item)>,
                        "style": Object {
                          "flex": 5,
                        },
                        "virtual": undefined,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": Array [
                            <Styled(Input)
                              className="search-input"
                              onChangeText={[Function]}
                              style={
                                Object {
                                  "backgroundColor": "#7C8589",
                                  "borderColor": "white",
                                  "borderLeftWidth": 0,
                                  "borderRightWidth": 0,
                                  "borderTopWidth": 0,
                                  "borderWidth": 2,
                                  "color": "white",
                                  "fontSize": 20,
                                  "height": 30,
                                  "width": "100%",
                                }
                              }
                            />,
                            <Styled(Icon)
                              name="search"
                              style={
                                Object {
                                  "color": "white",
                                  "fontSize": 20,
                                }
                              }
                              type="FontAwesome"
                            />,
                          ],
                          "style": Object {
                            "borderBottomWidth": 3,
                            "borderColor": "white",
                            "height": 30,
                          },
                          "virtual": undefined,
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "className": "search-input",
                              "onChangeText": [Function],
                              "style": Object {
                                "backgroundColor": "#7C8589",
                                "borderColor": "white",
                                "borderLeftWidth": 0,
                                "borderRightWidth": 0,
                                "borderTopWidth": 0,
                                "borderWidth": 2,
                                "color": "white",
                                "fontSize": 20,
                                "height": 30,
                                "width": "100%",
                              },
                              "virtual": undefined,
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "name": "search",
                              "style": Object {
                                "color": "white",
                                "fontSize": 20,
                              },
                              "type": "FontAwesome",
                              "virtual": undefined,
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                        ],
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <Styled(Text)>
                           
                        </Styled(Text)>,
                        "style": Object {
                          "flex": 1,
                        },
                        "virtual": undefined,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": " ",
                          "virtual": undefined,
                        },
                        "ref": null,
                        "rendered": " ",
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  Array [],
                  <Styled(Card)>
                    <Styled(ViewNB)
                      style={
                        Object {
                          "alignItems": "center",
                          "justifyContent": "center",
                          "marginVertical": "5%",
                        }
                      }
                    >
                      <Styled(Icon)
                        name="info"
                        type="Feather"
                      />
                      <Styled(Text)>
                        Não há eventos para a pesquisa feita.
                      </Styled(Text)>
                    </Styled(ViewNB)>
                  </Styled(Card)>,
                ],
                "style": Object {
                  "backgroundColor": "#7C8589",
                  "marginHorizontal": "2%",
                },
                "virtual": undefined,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <Styled(ViewNB)
                      style={
                        Object {
                          "alignItems": "center",
                          "justifyContent": "center",
                          "marginVertical": "5%",
                        }
                      }
                    >
                      <Styled(Icon)
                        name="info"
                        type="Feather"
                      />
                      <Styled(Text)>
                        Não há eventos para a pesquisa feita.
                      </Styled(Text)>
                    </Styled(ViewNB)>,
                    "virtual": undefined,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        <Styled(Icon)
                          name="info"
                          type="Feather"
                        />,
                        <Styled(Text)>
                          Não há eventos para a pesquisa feita.
                        </Styled(Text)>,
                      ],
                      "style": Object {
                        "alignItems": "center",
                        "justifyContent": "center",
                        "marginVertical": "5%",
                      },
                      "virtual": undefined,
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "name": "info",
                          "type": "Feather",
                          "virtual": undefined,
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": "Não há eventos para a pesquisa feita.",
                          "virtual": undefined,
                        },
                        "ref": null,
                        "rendered": "Não há eventos para a pesquisa feita.",
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [MockFunction] {
            "calls": Array [
              Array [
                Object {
                  "children": Array [],
                  "data": Array [],
                  "disableVirtualization": false,
                  "getItem": [Function],
                  "getItemCount": [Function],
                  "horizontal": false,
                  "initialNumToRender": 10,
                  "invertStickyHeaders": undefined,
                  "keyExtractor": [Function],
                  "maxToRenderPerBatch": 10,
                  "numColumns": 1,
                  "onContentSizeChange": [Function],
                  "onEndReachedThreshold": 2,
                  "onLayout": [Function],
                  "onMomentumScrollEnd": [Function],
                  "onScroll": [Function],
                  "onScrollBeginDrag": [Function],
                  "onScrollEndDrag": [Function],
                  "renderItem": [Function],
                  "scrollEventThrottle": 50,
                  "stickyHeaderIndices": Array [],
                  "style": Object {
                    "marginHorizontal": -15,
                    "marginTop": 0,
                  },
                  "updateCellsBatchingPeriod": 50,
                  "viewabilityConfigCallbackPairs": Array [],
                  "windowSize": 21,
                },
                Object {},
              ],
            ],
            "results": Array [
              Object {
                "isThrow": false,
                "value": undefined,
              },
            ],
          },
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`App snapshot renders correctly without events 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SearchScreen
    navigation={
      Object {
        "getParam": [MockFunction],
      }
    }
    screenProps={
      Object {
        "language": "PT",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <CustomHeader
          language="PT"
        />,
        <ScrollViewMock
          refreshControl={
            <RefreshControlMock
              onRefresh={[Function]}
              refreshing={false}
            />
          }
          stickyHeaderIndices={
            Array [
              2,
            ]
          }
          style={
            Object {
              "backgroundColor": "#7C8589",
              "height": "100%",
            }
          }
        >
          <Styled(ViewNB)
            style={
              Object {
                "backgroundColor": "#7C8589",
                "marginHorizontal": "5%",
                "paddingBottom": "2%",
                "paddingTop": "5%",
              }
            }
          >
            <Styled(Text)
              style={
                Object {
                  "color": "white",
                  "fontFamily": "OpenSans-Regular",
                  "fontSize": 32,
                  "textAlign": "center",
                }
              }
            >
              Pesquisa
            </Styled(Text)>
            <Styled(ViewNB)
              style={
                Object {
                  "backgroundColor": "#7C8589",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": "5%",
                }
              }
            >
              <Styled(ViewNB)
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <Styled(Text)>
                   
                </Styled(Text)>
              </Styled(ViewNB)>
              <Styled(ViewNB)
                style={
                  Object {
                    "flex": 5,
                  }
                }
              >
                <Styled(Item)
                  style={
                    Object {
                      "borderBottomWidth": 3,
                      "borderColor": "white",
                      "height": 30,
                    }
                  }
                >
                  <Styled(Input)
                    className="search-input"
                    onChangeText={[Function]}
                    style={
                      Object {
                        "backgroundColor": "#7C8589",
                        "borderColor": "white",
                        "borderLeftWidth": 0,
                        "borderRightWidth": 0,
                        "borderTopWidth": 0,
                        "borderWidth": 2,
                        "color": "white",
                        "fontSize": 20,
                        "height": 30,
                        "width": "100%",
                      }
                    }
                  />
                  <Styled(Icon)
                    name="search"
                    style={
                      Object {
                        "color": "white",
                        "fontSize": 20,
                      }
                    }
                    type="FontAwesome"
                  />
                </Styled(Item)>
              </Styled(ViewNB)>
              <Styled(ViewNB)
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <Styled(Text)>
                   
                </Styled(Text)>
              </Styled(ViewNB)>
            </Styled(ViewNB)>
          </Styled(ViewNB)>
          <Styled(ViewNB)
            style={
              Object {
                "backgroundColor": "#7C8589",
                "marginHorizontal": "2%",
              }
            }
          >
            <Styled(Card)>
              <Styled(ViewNB)
                style={
                  Object {
                    "alignItems": "center",
                    "justifyContent": "center",
                    "marginVertical": "5%",
                  }
                }
              >
                <Styled(Icon)
                  name="info"
                  type="Feather"
                />
                <Styled(Text)>
                  Não há eventos para a pesquisa feita.
                </Styled(Text)>
              </Styled(ViewNB)>
            </Styled(Card)>
          </Styled(ViewNB)>
        </ScrollViewMock>,
      ],
      "style": Object {
        "backgroundColor": "#7C8589",
      },
      "virtual": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "language": "PT",
          "toggleLanguage": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Styled(ViewNB)
              style={
                Object {
                  "backgroundColor": "#7C8589",
                  "marginHorizontal": "5%",
                  "paddingBottom": "2%",
                  "paddingTop": "5%",
                }
              }
            >
              <Styled(Text)
                style={
                  Object {
                    "color": "white",
                    "fontFamily": "OpenSans-Regular",
                    "fontSize": 32,
                    "textAlign": "center",
                  }
                }
              >
                Pesquisa
              </Styled(Text)>
              <Styled(ViewNB)
                style={
                  Object {
                    "backgroundColor": "#7C8589",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": "5%",
                  }
                }
              >
                <Styled(ViewNB)
                  style={
                    Object {
                      "flex": 1,
                    }
                  }
                >
                  <Styled(Text)>
                     
                  </Styled(Text)>
                </Styled(ViewNB)>
                <Styled(ViewNB)
                  style={
                    Object {
                      "flex": 5,
                    }
                  }
                >
                  <Styled(Item)
                    style={
                      Object {
                        "borderBottomWidth": 3,
                        "borderColor": "white",
                        "height": 30,
                      }
                    }
                  >
                    <Styled(Input)
                      className="search-input"
                      onChangeText={[Function]}
                      style={
                        Object {
                          "backgroundColor": "#7C8589",
                          "borderColor": "white",
                          "borderLeftWidth": 0,
                          "borderRightWidth": 0,
                          "borderTopWidth": 0,
                          "borderWidth": 2,
                          "color": "white",
                          "fontSize": 20,
                          "height": 30,
                          "width": "100%",
                        }
                      }
                    />
                    <Styled(Icon)
                      name="search"
                      style={
                        Object {
                          "color": "white",
                          "fontSize": 20,
                        }
                      }
                      type="FontAwesome"
                    />
                  </Styled(Item)>
                </Styled(ViewNB)>
                <Styled(ViewNB)
                  style={
                    Object {
                      "flex": 1,
                    }
                  }
                >
                  <Styled(Text)>
                     
                  </Styled(Text)>
                </Styled(ViewNB)>
              </Styled(ViewNB)>
            </Styled(ViewNB)>,
            <Styled(ViewNB)
              style={
                Object {
                  "backgroundColor": "#7C8589",
                  "marginHorizontal": "2%",
                }
              }
            >
              <Styled(Card)>
                <Styled(ViewNB)
                  style={
                    Object {
                      "alignItems": "center",
                      "justifyContent": "center",
                      "marginVertical": "5%",
                    }
                  }
                >
                  <Styled(Icon)
                    name="info"
                    type="Feather"
                  />
                  <Styled(Text)>
                    Não há eventos para a pesquisa feita.
                  </Styled(Text)>
                </Styled(ViewNB)>
              </Styled(Card)>
            </Styled(ViewNB)>,
          ],
          "refreshControl": <RefreshControlMock
            onRefresh={[Function]}
            refreshing={false}
          />,
          "stickyHeaderIndices": Array [
            2,
          ],
          "style": Object {
            "backgroundColor": "#7C8589",
            "height": "100%",
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Styled(Text)
                  style={
                    Object {
                      "color": "white",
                      "fontFamily": "OpenSans-Regular",
                      "fontSize": 32,
                      "textAlign": "center",
                    }
                  }
                >
                  Pesquisa
                </Styled(Text)>,
                <Styled(ViewNB)
                  style={
                    Object {
                      "backgroundColor": "#7C8589",
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "paddingBottom": "5%",
                    }
                  }
                >
                  <Styled(ViewNB)
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                  >
                    <Styled(Text)>
                       
                    </Styled(Text)>
                  </Styled(ViewNB)>
                  <Styled(ViewNB)
                    style={
                      Object {
                        "flex": 5,
                      }
                    }
                  >
                    <Styled(Item)
                      style={
                        Object {
                          "borderBottomWidth": 3,
                          "borderColor": "white",
                          "height": 30,
                        }
                      }
                    >
                      <Styled(Input)
                        className="search-input"
                        onChangeText={[Function]}
                        style={
                          Object {
                            "backgroundColor": "#7C8589",
                            "borderColor": "white",
                            "borderLeftWidth": 0,
                            "borderRightWidth": 0,
                            "borderTopWidth": 0,
                            "borderWidth": 2,
                            "color": "white",
                            "fontSize": 20,
                            "height": 30,
                            "width": "100%",
                          }
                        }
                      />
                      <Styled(Icon)
                        name="search"
                        style={
                          Object {
                            "color": "white",
                            "fontSize": 20,
                          }
                        }
                        type="FontAwesome"
                      />
                    </Styled(Item)>
                  </Styled(ViewNB)>
                  <Styled(ViewNB)
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                  >
                    <Styled(Text)>
                       
                    </Styled(Text)>
                  </Styled(ViewNB)>
                </Styled(ViewNB)>,
              ],
              "style": Object {
                "backgroundColor": "#7C8589",
                "marginHorizontal": "5%",
                "paddingBottom": "2%",
                "paddingTop": "5%",
              },
              "virtual": undefined,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Pesquisa",
                  "style": Object {
                    "color": "white",
                    "fontFamily": "OpenSans-Regular",
                    "fontSize": 32,
                    "textAlign": "center",
                  },
                  "virtual": undefined,
                },
                "ref": null,
                "rendered": "Pesquisa",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <Styled(ViewNB)
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <Styled(Text)>
                         
                      </Styled(Text)>
                    </Styled(ViewNB)>,
                    <Styled(ViewNB)
                      style={
                        Object {
                          "flex": 5,
                        }
                      }
                    >
                      <Styled(Item)
                        style={
                          Object {
                            "borderBottomWidth": 3,
                            "borderColor": "white",
                            "height": 30,
                          }
                        }
                      >
                        <Styled(Input)
                          className="search-input"
                          onChangeText={[Function]}
                          style={
                            Object {
                              "backgroundColor": "#7C8589",
                              "borderColor": "white",
                              "borderLeftWidth": 0,
                              "borderRightWidth": 0,
                              "borderTopWidth": 0,
                              "borderWidth": 2,
                              "color": "white",
                              "fontSize": 20,
                              "height": 30,
                              "width": "100%",
                            }
                          }
                        />
                        <Styled(Icon)
                          name="search"
                          style={
                            Object {
                              "color": "white",
                              "fontSize": 20,
                            }
                          }
                          type="FontAwesome"
                        />
                      </Styled(Item)>
                    </Styled(ViewNB)>,
                    <Styled(ViewNB)
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <Styled(Text)>
                         
                      </Styled(Text)>
                    </Styled(ViewNB)>,
                  ],
                  "style": Object {
                    "backgroundColor": "#7C8589",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": "5%",
                  },
                  "virtual": undefined,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <Styled(Text)>
                         
                      </Styled(Text)>,
                      "style": Object {
                        "flex": 1,
                      },
                      "virtual": undefined,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": " ",
                        "virtual": undefined,
                      },
                      "ref": null,
                      "rendered": " ",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <Styled(Item)
                        style={
                          Object {
                            "borderBottomWidth": 3,
                            "borderColor": "white",
                            "height": 30,
                          }
                        }
                      >
                        <Styled(Input)
                          className="search-input"
                          onChangeText={[Function]}
                          style={
                            Object {
                              "backgroundColor": "#7C8589",
                              "borderColor": "white",
                              "borderLeftWidth": 0,
                              "borderRightWidth": 0,
                              "borderTopWidth": 0,
                              "borderWidth": 2,
                              "color": "white",
                              "fontSize": 20,
                              "height": 30,
                              "width": "100%",
                            }
                          }
                        />
                        <Styled(Icon)
                          name="search"
                          style={
                            Object {
                              "color": "white",
                              "fontSize": 20,
                            }
                          }
                          type="FontAwesome"
                        />
                      </Styled(Item)>,
                      "style": Object {
                        "flex": 5,
                      },
                      "virtual": undefined,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": Array [
                          <Styled(Input)
                            className="search-input"
                            onChangeText={[Function]}
                            style={
                              Object {
                                "backgroundColor": "#7C8589",
                                "borderColor": "white",
                                "borderLeftWidth": 0,
                                "borderRightWidth": 0,
                                "borderTopWidth": 0,
                                "borderWidth": 2,
                                "color": "white",
                                "fontSize": 20,
                                "height": 30,
                                "width": "100%",
                              }
                            }
                          />,
                          <Styled(Icon)
                            name="search"
                            style={
                              Object {
                                "color": "white",
                                "fontSize": 20,
                              }
                            }
                            type="FontAwesome"
                          />,
                        ],
                        "style": Object {
                          "borderBottomWidth": 3,
                          "borderColor": "white",
                          "height": 30,
                        },
                        "virtual": undefined,
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "className": "search-input",
                            "onChangeText": [Function],
                            "style": Object {
                              "backgroundColor": "#7C8589",
                              "borderColor": "white",
                              "borderLeftWidth": 0,
                              "borderRightWidth": 0,
                              "borderTopWidth": 0,
                              "borderWidth": 2,
                              "color": "white",
                              "fontSize": 20,
                              "height": 30,
                              "width": "100%",
                            },
                            "virtual": undefined,
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "name": "search",
                            "style": Object {
                              "color": "white",
                              "fontSize": 20,
                            },
                            "type": "FontAwesome",
                            "virtual": undefined,
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                      ],
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <Styled(Text)>
                         
                      </Styled(Text)>,
                      "style": Object {
                        "flex": 1,
                      },
                      "virtual": undefined,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": " ",
                        "virtual": undefined,
                      },
                      "ref": null,
                      "rendered": " ",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                Array [],
                <Styled(Card)>
                  <Styled(ViewNB)
                    style={
                      Object {
                        "alignItems": "center",
                        "justifyContent": "center",
                        "marginVertical": "5%",
                      }
                    }
                  >
                    <Styled(Icon)
                      name="info"
                      type="Feather"
                    />
                    <Styled(Text)>
                      Não há eventos para a pesquisa feita.
                    </Styled(Text)>
                  </Styled(ViewNB)>
                </Styled(Card)>,
              ],
              "style": Object {
                "backgroundColor": "#7C8589",
                "marginHorizontal": "2%",
              },
              "virtual": undefined,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <Styled(ViewNB)
                    style={
                      Object {
                        "alignItems": "center",
                        "justifyContent": "center",
                        "marginVertical": "5%",
                      }
                    }
                  >
                    <Styled(Icon)
                      name="info"
                      type="Feather"
                    />
                    <Styled(Text)>
                      Não há eventos para a pesquisa feita.
                    </Styled(Text)>
                  </Styled(ViewNB)>,
                  "virtual": undefined,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <Styled(Icon)
                        name="info"
                        type="Feather"
                      />,
                      <Styled(Text)>
                        Não há eventos para a pesquisa feita.
                      </Styled(Text)>,
                    ],
                    "style": Object {
                      "alignItems": "center",
                      "justifyContent": "center",
                      "marginVertical": "5%",
                    },
                    "virtual": undefined,
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "name": "info",
                        "type": "Feather",
                        "virtual": undefined,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "Não há eventos para a pesquisa feita.",
                        "virtual": undefined,
                      },
                      "ref": null,
                      "rendered": "Não há eventos para a pesquisa feita.",
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [MockFunction] {
          "calls": Array [
            Array [
              Object {
                "children": Array [],
                "data": Array [],
                "disableVirtualization": false,
                "getItem": [Function],
                "getItemCount": [Function],
                "horizontal": false,
                "initialNumToRender": 10,
                "invertStickyHeaders": undefined,
                "keyExtractor": [Function],
                "maxToRenderPerBatch": 10,
                "numColumns": 1,
                "onContentSizeChange": [Function],
                "onEndReachedThreshold": 2,
                "onLayout": [Function],
                "onMomentumScrollEnd": [Function],
                "onScroll": [Function],
                "onScrollBeginDrag": [Function],
                "onScrollEndDrag": [Function],
                "renderItem": [Function],
                "scrollEventThrottle": 50,
                "stickyHeaderIndices": Array [],
                "style": Object {
                  "marginHorizontal": -15,
                  "marginTop": 0,
                },
                "updateCellsBatchingPeriod": 50,
                "viewabilityConfigCallbackPairs": Array [],
                "windowSize": 21,
              },
              Object {},
            ],
          ],
          "results": Array [
            Object {
              "isThrow": false,
              "value": undefined,
            },
          ],
        },
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <CustomHeader
            language="PT"
          />,
          <ScrollViewMock
            refreshControl={
              <RefreshControlMock
                onRefresh={[Function]}
                refreshing={false}
              />
            }
            stickyHeaderIndices={
              Array [
                2,
              ]
            }
            style={
              Object {
                "backgroundColor": "#7C8589",
                "height": "100%",
              }
            }
          >
            <Styled(ViewNB)
              style={
                Object {
                  "backgroundColor": "#7C8589",
                  "marginHorizontal": "5%",
                  "paddingBottom": "2%",
                  "paddingTop": "5%",
                }
              }
            >
              <Styled(Text)
                style={
                  Object {
                    "color": "white",
                    "fontFamily": "OpenSans-Regular",
                    "fontSize": 32,
                    "textAlign": "center",
                  }
                }
              >
                Pesquisa
              </Styled(Text)>
              <Styled(ViewNB)
                style={
                  Object {
                    "backgroundColor": "#7C8589",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": "5%",
                  }
                }
              >
                <Styled(ViewNB)
                  style={
                    Object {
                      "flex": 1,
                    }
                  }
                >
                  <Styled(Text)>
                     
                  </Styled(Text)>
                </Styled(ViewNB)>
                <Styled(ViewNB)
                  style={
                    Object {
                      "flex": 5,
                    }
                  }
                >
                  <Styled(Item)
                    style={
                      Object {
                        "borderBottomWidth": 3,
                        "borderColor": "white",
                        "height": 30,
                      }
                    }
                  >
                    <Styled(Input)
                      className="search-input"
                      onChangeText={[Function]}
                      style={
                        Object {
                          "backgroundColor": "#7C8589",
                          "borderColor": "white",
                          "borderLeftWidth": 0,
                          "borderRightWidth": 0,
                          "borderTopWidth": 0,
                          "borderWidth": 2,
                          "color": "white",
                          "fontSize": 20,
                          "height": 30,
                          "width": "100%",
                        }
                      }
                    />
                    <Styled(Icon)
                      name="search"
                      style={
                        Object {
                          "color": "white",
                          "fontSize": 20,
                        }
                      }
                      type="FontAwesome"
                    />
                  </Styled(Item)>
                </Styled(ViewNB)>
                <Styled(ViewNB)
                  style={
                    Object {
                      "flex": 1,
                    }
                  }
                >
                  <Styled(Text)>
                     
                  </Styled(Text)>
                </Styled(ViewNB)>
              </Styled(ViewNB)>
            </Styled(ViewNB)>
            <Styled(ViewNB)
              style={
                Object {
                  "backgroundColor": "#7C8589",
                  "marginHorizontal": "2%",
                }
              }
            >
              <Styled(Card)>
                <Styled(ViewNB)
                  style={
                    Object {
                      "alignItems": "center",
                      "justifyContent": "center",
                      "marginVertical": "5%",
                    }
                  }
                >
                  <Styled(Icon)
                    name="info"
                    type="Feather"
                  />
                  <Styled(Text)>
                    Não há eventos para a pesquisa feita.
                  </Styled(Text)>
                </Styled(ViewNB)>
              </Styled(Card)>
            </Styled(ViewNB)>
          </ScrollViewMock>,
        ],
        "style": Object {
          "backgroundColor": "#7C8589",
        },
        "virtual": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "language": "PT",
            "toggleLanguage": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Styled(ViewNB)
                style={
                  Object {
                    "backgroundColor": "#7C8589",
                    "marginHorizontal": "5%",
                    "paddingBottom": "2%",
                    "paddingTop": "5%",
                  }
                }
              >
                <Styled(Text)
                  style={
                    Object {
                      "color": "white",
                      "fontFamily": "OpenSans-Regular",
                      "fontSize": 32,
                      "textAlign": "center",
                    }
                  }
                >
                  Pesquisa
                </Styled(Text)>
                <Styled(ViewNB)
                  style={
                    Object {
                      "backgroundColor": "#7C8589",
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "paddingBottom": "5%",
                    }
                  }
                >
                  <Styled(ViewNB)
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                  >
                    <Styled(Text)>
                       
                    </Styled(Text)>
                  </Styled(ViewNB)>
                  <Styled(ViewNB)
                    style={
                      Object {
                        "flex": 5,
                      }
                    }
                  >
                    <Styled(Item)
                      style={
                        Object {
                          "borderBottomWidth": 3,
                          "borderColor": "white",
                          "height": 30,
                        }
                      }
                    >
                      <Styled(Input)
                        className="search-input"
                        onChangeText={[Function]}
                        style={
                          Object {
                            "backgroundColor": "#7C8589",
                            "borderColor": "white",
                            "borderLeftWidth": 0,
                            "borderRightWidth": 0,
                            "borderTopWidth": 0,
                            "borderWidth": 2,
                            "color": "white",
                            "fontSize": 20,
                            "height": 30,
                            "width": "100%",
                          }
                        }
                      />
                      <Styled(Icon)
                        name="search"
                        style={
                          Object {
                            "color": "white",
                            "fontSize": 20,
                          }
                        }
                        type="FontAwesome"
                      />
                    </Styled(Item)>
                  </Styled(ViewNB)>
                  <Styled(ViewNB)
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                  >
                    <Styled(Text)>
                       
                    </Styled(Text)>
                  </Styled(ViewNB)>
                </Styled(ViewNB)>
              </Styled(ViewNB)>,
              <Styled(ViewNB)
                style={
                  Object {
                    "backgroundColor": "#7C8589",
                    "marginHorizontal": "2%",
                  }
                }
              >
                <Styled(Card)>
                  <Styled(ViewNB)
                    style={
                      Object {
                        "alignItems": "center",
                        "justifyContent": "center",
                        "marginVertical": "5%",
                      }
                    }
                  >
                    <Styled(Icon)
                      name="info"
                      type="Feather"
                    />
                    <Styled(Text)>
                      Não há eventos para a pesquisa feita.
                    </Styled(Text)>
                  </Styled(ViewNB)>
                </Styled(Card)>
              </Styled(ViewNB)>,
            ],
            "refreshControl": <RefreshControlMock
              onRefresh={[Function]}
              refreshing={false}
            />,
            "stickyHeaderIndices": Array [
              2,
            ],
            "style": Object {
              "backgroundColor": "#7C8589",
              "height": "100%",
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Styled(Text)
                    style={
                      Object {
                        "color": "white",
                        "fontFamily": "OpenSans-Regular",
                        "fontSize": 32,
                        "textAlign": "center",
                      }
                    }
                  >
                    Pesquisa
                  </Styled(Text)>,
                  <Styled(ViewNB)
                    style={
                      Object {
                        "backgroundColor": "#7C8589",
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "paddingBottom": "5%",
                      }
                    }
                  >
                    <Styled(ViewNB)
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <Styled(Text)>
                         
                      </Styled(Text)>
                    </Styled(ViewNB)>
                    <Styled(ViewNB)
                      style={
                        Object {
                          "flex": 5,
                        }
                      }
                    >
                      <Styled(Item)
                        style={
                          Object {
                            "borderBottomWidth": 3,
                            "borderColor": "white",
                            "height": 30,
                          }
                        }
                      >
                        <Styled(Input)
                          className="search-input"
                          onChangeText={[Function]}
                          style={
                            Object {
                              "backgroundColor": "#7C8589",
                              "borderColor": "white",
                              "borderLeftWidth": 0,
                              "borderRightWidth": 0,
                              "borderTopWidth": 0,
                              "borderWidth": 2,
                              "color": "white",
                              "fontSize": 20,
                              "height": 30,
                              "width": "100%",
                            }
                          }
                        />
                        <Styled(Icon)
                          name="search"
                          style={
                            Object {
                              "color": "white",
                              "fontSize": 20,
                            }
                          }
                          type="FontAwesome"
                        />
                      </Styled(Item)>
                    </Styled(ViewNB)>
                    <Styled(ViewNB)
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <Styled(Text)>
                         
                      </Styled(Text)>
                    </Styled(ViewNB)>
                  </Styled(ViewNB)>,
                ],
                "style": Object {
                  "backgroundColor": "#7C8589",
                  "marginHorizontal": "5%",
                  "paddingBottom": "2%",
                  "paddingTop": "5%",
                },
                "virtual": undefined,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Pesquisa",
                    "style": Object {
                      "color": "white",
                      "fontFamily": "OpenSans-Regular",
                      "fontSize": 32,
                      "textAlign": "center",
                    },
                    "virtual": undefined,
                  },
                  "ref": null,
                  "rendered": "Pesquisa",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <Styled(ViewNB)
                        style={
                          Object {
                            "flex": 1,
                          }
                        }
                      >
                        <Styled(Text)>
                           
                        </Styled(Text)>
                      </Styled(ViewNB)>,
                      <Styled(ViewNB)
                        style={
                          Object {
                            "flex": 5,
                          }
                        }
                      >
                        <Styled(Item)
                          style={
                            Object {
                              "borderBottomWidth": 3,
                              "borderColor": "white",
                              "height": 30,
                            }
                          }
                        >
                          <Styled(Input)
                            className="search-input"
                            onChangeText={[Function]}
                            style={
                              Object {
                                "backgroundColor": "#7C8589",
                                "borderColor": "white",
                                "borderLeftWidth": 0,
                                "borderRightWidth": 0,
                                "borderTopWidth": 0,
                                "borderWidth": 2,
                                "color": "white",
                                "fontSize": 20,
                                "height": 30,
                                "width": "100%",
                              }
                            }
                          />
                          <Styled(Icon)
                            name="search"
                            style={
                              Object {
                                "color": "white",
                                "fontSize": 20,
                              }
                            }
                            type="FontAwesome"
                          />
                        </Styled(Item)>
                      </Styled(ViewNB)>,
                      <Styled(ViewNB)
                        style={
                          Object {
                            "flex": 1,
                          }
                        }
                      >
                        <Styled(Text)>
                           
                        </Styled(Text)>
                      </Styled(ViewNB)>,
                    ],
                    "style": Object {
                      "backgroundColor": "#7C8589",
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "paddingBottom": "5%",
                    },
                    "virtual": undefined,
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <Styled(Text)>
                           
                        </Styled(Text)>,
                        "style": Object {
                          "flex": 1,
                        },
                        "virtual": undefined,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": " ",
                          "virtual": undefined,
                        },
                        "ref": null,
                        "rendered": " ",
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <Styled(Item)
                          style={
                            Object {
                              "borderBottomWidth": 3,
                              "borderColor": "white",
                              "height": 30,
                            }
                          }
                        >
                          <Styled(Input)
                            className="search-input"
                            onChangeText={[Function]}
                            style={
                              Object {
                                "backgroundColor": "#7C8589",
                                "borderColor": "white",
                                "borderLeftWidth": 0,
                                "borderRightWidth": 0,
                                "borderTopWidth": 0,
                                "borderWidth": 2,
                                "color": "white",
                                "fontSize": 20,
                                "height": 30,
                                "width": "100%",
                              }
                            }
                          />
                          <Styled(Icon)
                            name="search"
                            style={
                              Object {
                                "color": "white",
                                "fontSize": 20,
                              }
                            }
                            type="FontAwesome"
                          />
                        </Styled(Item)>,
                        "style": Object {
                          "flex": 5,
                        },
                        "virtual": undefined,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": Array [
                            <Styled(Input)
                              className="search-input"
                              onChangeText={[Function]}
                              style={
                                Object {
                                  "backgroundColor": "#7C8589",
                                  "borderColor": "white",
                                  "borderLeftWidth": 0,
                                  "borderRightWidth": 0,
                                  "borderTopWidth": 0,
                                  "borderWidth": 2,
                                  "color": "white",
                                  "fontSize": 20,
                                  "height": 30,
                                  "width": "100%",
                                }
                              }
                            />,
                            <Styled(Icon)
                              name="search"
                              style={
                                Object {
                                  "color": "white",
                                  "fontSize": 20,
                                }
                              }
                              type="FontAwesome"
                            />,
                          ],
                          "style": Object {
                            "borderBottomWidth": 3,
                            "borderColor": "white",
                            "height": 30,
                          },
                          "virtual": undefined,
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "className": "search-input",
                              "onChangeText": [Function],
                              "style": Object {
                                "backgroundColor": "#7C8589",
                                "borderColor": "white",
                                "borderLeftWidth": 0,
                                "borderRightWidth": 0,
                                "borderTopWidth": 0,
                                "borderWidth": 2,
                                "color": "white",
                                "fontSize": 20,
                                "height": 30,
                                "width": "100%",
                              },
                              "virtual": undefined,
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "name": "search",
                              "style": Object {
                                "color": "white",
                                "fontSize": 20,
                              },
                              "type": "FontAwesome",
                              "virtual": undefined,
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                        ],
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <Styled(Text)>
                           
                        </Styled(Text)>,
                        "style": Object {
                          "flex": 1,
                        },
                        "virtual": undefined,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": " ",
                          "virtual": undefined,
                        },
                        "ref": null,
                        "rendered": " ",
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  Array [],
                  <Styled(Card)>
                    <Styled(ViewNB)
                      style={
                        Object {
                          "alignItems": "center",
                          "justifyContent": "center",
                          "marginVertical": "5%",
                        }
                      }
                    >
                      <Styled(Icon)
                        name="info"
                        type="Feather"
                      />
                      <Styled(Text)>
                        Não há eventos para a pesquisa feita.
                      </Styled(Text)>
                    </Styled(ViewNB)>
                  </Styled(Card)>,
                ],
                "style": Object {
                  "backgroundColor": "#7C8589",
                  "marginHorizontal": "2%",
                },
                "virtual": undefined,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <Styled(ViewNB)
                      style={
                        Object {
                          "alignItems": "center",
                          "justifyContent": "center",
                          "marginVertical": "5%",
                        }
                      }
                    >
                      <Styled(Icon)
                        name="info"
                        type="Feather"
                      />
                      <Styled(Text)>
                        Não há eventos para a pesquisa feita.
                      </Styled(Text)>
                    </Styled(ViewNB)>,
                    "virtual": undefined,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        <Styled(Icon)
                          name="info"
                          type="Feather"
                        />,
                        <Styled(Text)>
                          Não há eventos para a pesquisa feita.
                        </Styled(Text)>,
                      ],
                      "style": Object {
                        "alignItems": "center",
                        "justifyContent": "center",
                        "marginVertical": "5%",
                      },
                      "virtual": undefined,
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "name": "info",
                          "type": "Feather",
                          "virtual": undefined,
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": "Não há eventos para a pesquisa feita.",
                          "virtual": undefined,
                        },
                        "ref": null,
                        "rendered": "Não há eventos para a pesquisa feita.",
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [MockFunction] {
            "calls": Array [
              Array [
                Object {
                  "children": Array [],
                  "data": Array [],
                  "disableVirtualization": false,
                  "getItem": [Function],
                  "getItemCount": [Function],
                  "horizontal": false,
                  "initialNumToRender": 10,
                  "invertStickyHeaders": undefined,
                  "keyExtractor": [Function],
                  "maxToRenderPerBatch": 10,
                  "numColumns": 1,
                  "onContentSizeChange": [Function],
                  "onEndReachedThreshold": 2,
                  "onLayout": [Function],
                  "onMomentumScrollEnd": [Function],
                  "onScroll": [Function],
                  "onScrollBeginDrag": [Function],
                  "onScrollEndDrag": [Function],
                  "renderItem": [Function],
                  "scrollEventThrottle": 50,
                  "stickyHeaderIndices": Array [],
                  "style": Object {
                    "marginHorizontal": -15,
                    "marginTop": 0,
                  },
                  "updateCellsBatchingPeriod": 50,
                  "viewabilityConfigCallbackPairs": Array [],
                  "windowSize": 21,
                },
                Object {},
              ],
            ],
            "results": Array [
              Object {
                "isThrow": false,
                "value": undefined,
              },
            ],
          },
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
