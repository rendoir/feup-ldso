// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App snapshot renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CategoriesScreen
    navigation={
      Object {
        "navigate": [MockFunction],
      }
    }
    screenProps={
      Object {
        "language": "PT",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <NewCustomHeader
          fave={false}
          language="PT"
          text="Categorias"
        />,
        <Styled(Content)>
          <Styled(List)>
            <Styled(ListItem)
              className="list-categories"
              onPress={[Function]}
              style={
                Object {
                  "justifyContent": "center",
                }
              }
            >
              <Styled(Button)
                className="all-categories"
                onPress={[Function]}
                transparent={true}
              >
                <Styled(Text)
                  style={
                    Object {
                      "color": "black",
                      "fontFamily": "OpenSans-Regular",
                      "fontSize": 18,
                      "paddingLeft": 5,
                    }
                  }
                >
                  Todos
                </Styled(Text)>
              </Styled(Button)>
            </Styled(ListItem)>
          </Styled(List)>
        </Styled(Content)>,
      ],
      "virtual": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "fave": false,
          "language": "PT",
          "text": "Categorias",
          "toggleLanguage": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Styled(List)>
            <Styled(ListItem)
              className="list-categories"
              onPress={[Function]}
              style={
                Object {
                  "justifyContent": "center",
                }
              }
            >
              <Styled(Button)
                className="all-categories"
                onPress={[Function]}
                transparent={true}
              >
                <Styled(Text)
                  style={
                    Object {
                      "color": "black",
                      "fontFamily": "OpenSans-Regular",
                      "fontSize": 18,
                      "paddingLeft": 5,
                    }
                  }
                >
                  Todos
                </Styled(Text)>
              </Styled(Button)>
            </Styled(ListItem)>
          </Styled(List)>,
          "virtual": undefined,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Styled(ListItem)
                className="list-categories"
                onPress={[Function]}
                style={
                  Object {
                    "justifyContent": "center",
                  }
                }
              >
                <Styled(Button)
                  className="all-categories"
                  onPress={[Function]}
                  transparent={true}
                >
                  <Styled(Text)
                    style={
                      Object {
                        "color": "black",
                        "fontFamily": "OpenSans-Regular",
                        "fontSize": 18,
                        "paddingLeft": 5,
                      }
                    }
                  >
                    Todos
                  </Styled(Text)>
                </Styled(Button)>
              </Styled(ListItem)>,
              Array [],
            ],
            "virtual": undefined,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Styled(Button)
                  className="all-categories"
                  onPress={[Function]}
                  transparent={true}
                >
                  <Styled(Text)
                    style={
                      Object {
                        "color": "black",
                        "fontFamily": "OpenSans-Regular",
                        "fontSize": 18,
                        "paddingLeft": 5,
                      }
                    }
                  >
                    Todos
                  </Styled(Text)>
                </Styled(Button)>,
                "className": "list-categories",
                "onPress": [Function],
                "style": Object {
                  "justifyContent": "center",
                },
                "virtual": undefined,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <Styled(Text)
                    style={
                      Object {
                        "color": "black",
                        "fontFamily": "OpenSans-Regular",
                        "fontSize": 18,
                        "paddingLeft": 5,
                      }
                    }
                  >
                    Todos
                  </Styled(Text)>,
                  "className": "all-categories",
                  "onPress": [Function],
                  "transparent": true,
                  "virtual": undefined,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Todos",
                    "style": Object {
                      "color": "black",
                      "fontFamily": "OpenSans-Regular",
                      "fontSize": 18,
                      "paddingLeft": 5,
                    },
                    "virtual": undefined,
                  },
                  "ref": null,
                  "rendered": "Todos",
                  "type": [Function],
                },
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <NewCustomHeader
            fave={false}
            language="PT"
            text="Categorias"
          />,
          <Styled(Content)>
            <Styled(List)>
              <Styled(ListItem)
                className="list-categories"
                onPress={[Function]}
                style={
                  Object {
                    "justifyContent": "center",
                  }
                }
              >
                <Styled(Button)
                  className="all-categories"
                  onPress={[Function]}
                  transparent={true}
                >
                  <Styled(Text)
                    style={
                      Object {
                        "color": "black",
                        "fontFamily": "OpenSans-Regular",
                        "fontSize": 18,
                        "paddingLeft": 5,
                      }
                    }
                  >
                    Todos
                  </Styled(Text)>
                </Styled(Button)>
              </Styled(ListItem)>
            </Styled(List)>
          </Styled(Content)>,
        ],
        "virtual": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "fave": false,
            "language": "PT",
            "text": "Categorias",
            "toggleLanguage": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Styled(List)>
              <Styled(ListItem)
                className="list-categories"
                onPress={[Function]}
                style={
                  Object {
                    "justifyContent": "center",
                  }
                }
              >
                <Styled(Button)
                  className="all-categories"
                  onPress={[Function]}
                  transparent={true}
                >
                  <Styled(Text)
                    style={
                      Object {
                        "color": "black",
                        "fontFamily": "OpenSans-Regular",
                        "fontSize": 18,
                        "paddingLeft": 5,
                      }
                    }
                  >
                    Todos
                  </Styled(Text)>
                </Styled(Button)>
              </Styled(ListItem)>
            </Styled(List)>,
            "virtual": undefined,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Styled(ListItem)
                  className="list-categories"
                  onPress={[Function]}
                  style={
                    Object {
                      "justifyContent": "center",
                    }
                  }
                >
                  <Styled(Button)
                    className="all-categories"
                    onPress={[Function]}
                    transparent={true}
                  >
                    <Styled(Text)
                      style={
                        Object {
                          "color": "black",
                          "fontFamily": "OpenSans-Regular",
                          "fontSize": 18,
                          "paddingLeft": 5,
                        }
                      }
                    >
                      Todos
                    </Styled(Text)>
                  </Styled(Button)>
                </Styled(ListItem)>,
                Array [],
              ],
              "virtual": undefined,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <Styled(Button)
                    className="all-categories"
                    onPress={[Function]}
                    transparent={true}
                  >
                    <Styled(Text)
                      style={
                        Object {
                          "color": "black",
                          "fontFamily": "OpenSans-Regular",
                          "fontSize": 18,
                          "paddingLeft": 5,
                        }
                      }
                    >
                      Todos
                    </Styled(Text)>
                  </Styled(Button)>,
                  "className": "list-categories",
                  "onPress": [Function],
                  "style": Object {
                    "justifyContent": "center",
                  },
                  "virtual": undefined,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <Styled(Text)
                      style={
                        Object {
                          "color": "black",
                          "fontFamily": "OpenSans-Regular",
                          "fontSize": 18,
                          "paddingLeft": 5,
                        }
                      }
                    >
                      Todos
                    </Styled(Text)>,
                    "className": "all-categories",
                    "onPress": [Function],
                    "transparent": true,
                    "virtual": undefined,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Todos",
                      "style": Object {
                        "color": "black",
                        "fontFamily": "OpenSans-Regular",
                        "fontSize": 18,
                        "paddingLeft": 5,
                      },
                      "virtual": undefined,
                    },
                    "ref": null,
                    "rendered": "Todos",
                    "type": [Function],
                  },
                  "type": [Function],
                },
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`App snapshot renders correctly with categories 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CategoriesScreen
    navigation={
      Object {
        "navigate": [MockFunction],
      }
    }
    screenProps={
      Object {
        "language": "PT",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <NewCustomHeader
          fave={false}
          language="PT"
          text="Categorias"
        />,
        <Styled(Content)>
          <Styled(List)>
            <Styled(ListItem)
              className="list-categories"
              onPress={[Function]}
              style={
                Object {
                  "justifyContent": "center",
                }
              }
            >
              <Styled(Button)
                className="all-categories"
                onPress={[Function]}
                transparent={true}
              >
                <Styled(Text)
                  style={
                    Object {
                      "color": "black",
                      "fontFamily": "OpenSans-Regular",
                      "fontSize": 18,
                      "paddingLeft": 5,
                    }
                  }
                >
                  Todos
                </Styled(Text)>
              </Styled(Button)>
            </Styled(ListItem)>
            <Category
              data={
                Object {
                  "id": 1,
                  "name": "Category 1",
                }
              }
              language="PT"
              onPress={[Function]}
            />
            <Category
              data={
                Object {
                  "id": 2,
                  "name": "Category 2",
                }
              }
              language="PT"
              onPress={[Function]}
            />
            <Category
              data={
                Object {
                  "id": 3,
                  "name": "Category 3",
                }
              }
              language="PT"
              onPress={[Function]}
            />
          </Styled(List)>
        </Styled(Content)>,
      ],
      "virtual": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "fave": false,
          "language": "PT",
          "text": "Categorias",
          "toggleLanguage": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Styled(List)>
            <Styled(ListItem)
              className="list-categories"
              onPress={[Function]}
              style={
                Object {
                  "justifyContent": "center",
                }
              }
            >
              <Styled(Button)
                className="all-categories"
                onPress={[Function]}
                transparent={true}
              >
                <Styled(Text)
                  style={
                    Object {
                      "color": "black",
                      "fontFamily": "OpenSans-Regular",
                      "fontSize": 18,
                      "paddingLeft": 5,
                    }
                  }
                >
                  Todos
                </Styled(Text)>
              </Styled(Button)>
            </Styled(ListItem)>
            <Category
              data={
                Object {
                  "id": 1,
                  "name": "Category 1",
                }
              }
              language="PT"
              onPress={[Function]}
            />
            <Category
              data={
                Object {
                  "id": 2,
                  "name": "Category 2",
                }
              }
              language="PT"
              onPress={[Function]}
            />
            <Category
              data={
                Object {
                  "id": 3,
                  "name": "Category 3",
                }
              }
              language="PT"
              onPress={[Function]}
            />
          </Styled(List)>,
          "virtual": undefined,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Styled(ListItem)
                className="list-categories"
                onPress={[Function]}
                style={
                  Object {
                    "justifyContent": "center",
                  }
                }
              >
                <Styled(Button)
                  className="all-categories"
                  onPress={[Function]}
                  transparent={true}
                >
                  <Styled(Text)
                    style={
                      Object {
                        "color": "black",
                        "fontFamily": "OpenSans-Regular",
                        "fontSize": 18,
                        "paddingLeft": 5,
                      }
                    }
                  >
                    Todos
                  </Styled(Text)>
                </Styled(Button)>
              </Styled(ListItem)>,
              Array [
                <Category
                  data={
                    Object {
                      "id": 1,
                      "name": "Category 1",
                    }
                  }
                  language="PT"
                  onPress={[Function]}
                />,
                <Category
                  data={
                    Object {
                      "id": 2,
                      "name": "Category 2",
                    }
                  }
                  language="PT"
                  onPress={[Function]}
                />,
                <Category
                  data={
                    Object {
                      "id": 3,
                      "name": "Category 3",
                    }
                  }
                  language="PT"
                  onPress={[Function]}
                />,
              ],
            ],
            "virtual": undefined,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Styled(Button)
                  className="all-categories"
                  onPress={[Function]}
                  transparent={true}
                >
                  <Styled(Text)
                    style={
                      Object {
                        "color": "black",
                        "fontFamily": "OpenSans-Regular",
                        "fontSize": 18,
                        "paddingLeft": 5,
                      }
                    }
                  >
                    Todos
                  </Styled(Text)>
                </Styled(Button)>,
                "className": "list-categories",
                "onPress": [Function],
                "style": Object {
                  "justifyContent": "center",
                },
                "virtual": undefined,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <Styled(Text)
                    style={
                      Object {
                        "color": "black",
                        "fontFamily": "OpenSans-Regular",
                        "fontSize": 18,
                        "paddingLeft": 5,
                      }
                    }
                  >
                    Todos
                  </Styled(Text)>,
                  "className": "all-categories",
                  "onPress": [Function],
                  "transparent": true,
                  "virtual": undefined,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Todos",
                    "style": Object {
                      "color": "black",
                      "fontFamily": "OpenSans-Regular",
                      "fontSize": 18,
                      "paddingLeft": 5,
                    },
                    "virtual": undefined,
                  },
                  "ref": null,
                  "rendered": "Todos",
                  "type": [Function],
                },
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "0",
              "nodeType": "class",
              "props": Object {
                "data": Object {
                  "id": 1,
                  "name": "Category 1",
                },
                "language": "PT",
                "onPress": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "1",
              "nodeType": "class",
              "props": Object {
                "data": Object {
                  "id": 2,
                  "name": "Category 2",
                },
                "language": "PT",
                "onPress": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "2",
              "nodeType": "class",
              "props": Object {
                "data": Object {
                  "id": 3,
                  "name": "Category 3",
                },
                "language": "PT",
                "onPress": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <NewCustomHeader
            fave={false}
            language="PT"
            text="Categorias"
          />,
          <Styled(Content)>
            <Styled(List)>
              <Styled(ListItem)
                className="list-categories"
                onPress={[Function]}
                style={
                  Object {
                    "justifyContent": "center",
                  }
                }
              >
                <Styled(Button)
                  className="all-categories"
                  onPress={[Function]}
                  transparent={true}
                >
                  <Styled(Text)
                    style={
                      Object {
                        "color": "black",
                        "fontFamily": "OpenSans-Regular",
                        "fontSize": 18,
                        "paddingLeft": 5,
                      }
                    }
                  >
                    Todos
                  </Styled(Text)>
                </Styled(Button)>
              </Styled(ListItem)>
              <Category
                data={
                  Object {
                    "id": 1,
                    "name": "Category 1",
                  }
                }
                language="PT"
                onPress={[Function]}
              />
              <Category
                data={
                  Object {
                    "id": 2,
                    "name": "Category 2",
                  }
                }
                language="PT"
                onPress={[Function]}
              />
              <Category
                data={
                  Object {
                    "id": 3,
                    "name": "Category 3",
                  }
                }
                language="PT"
                onPress={[Function]}
              />
            </Styled(List)>
          </Styled(Content)>,
        ],
        "virtual": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "fave": false,
            "language": "PT",
            "text": "Categorias",
            "toggleLanguage": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Styled(List)>
              <Styled(ListItem)
                className="list-categories"
                onPress={[Function]}
                style={
                  Object {
                    "justifyContent": "center",
                  }
                }
              >
                <Styled(Button)
                  className="all-categories"
                  onPress={[Function]}
                  transparent={true}
                >
                  <Styled(Text)
                    style={
                      Object {
                        "color": "black",
                        "fontFamily": "OpenSans-Regular",
                        "fontSize": 18,
                        "paddingLeft": 5,
                      }
                    }
                  >
                    Todos
                  </Styled(Text)>
                </Styled(Button)>
              </Styled(ListItem)>
              <Category
                data={
                  Object {
                    "id": 1,
                    "name": "Category 1",
                  }
                }
                language="PT"
                onPress={[Function]}
              />
              <Category
                data={
                  Object {
                    "id": 2,
                    "name": "Category 2",
                  }
                }
                language="PT"
                onPress={[Function]}
              />
              <Category
                data={
                  Object {
                    "id": 3,
                    "name": "Category 3",
                  }
                }
                language="PT"
                onPress={[Function]}
              />
            </Styled(List)>,
            "virtual": undefined,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Styled(ListItem)
                  className="list-categories"
                  onPress={[Function]}
                  style={
                    Object {
                      "justifyContent": "center",
                    }
                  }
                >
                  <Styled(Button)
                    className="all-categories"
                    onPress={[Function]}
                    transparent={true}
                  >
                    <Styled(Text)
                      style={
                        Object {
                          "color": "black",
                          "fontFamily": "OpenSans-Regular",
                          "fontSize": 18,
                          "paddingLeft": 5,
                        }
                      }
                    >
                      Todos
                    </Styled(Text)>
                  </Styled(Button)>
                </Styled(ListItem)>,
                Array [
                  <Category
                    data={
                      Object {
                        "id": 1,
                        "name": "Category 1",
                      }
                    }
                    language="PT"
                    onPress={[Function]}
                  />,
                  <Category
                    data={
                      Object {
                        "id": 2,
                        "name": "Category 2",
                      }
                    }
                    language="PT"
                    onPress={[Function]}
                  />,
                  <Category
                    data={
                      Object {
                        "id": 3,
                        "name": "Category 3",
                      }
                    }
                    language="PT"
                    onPress={[Function]}
                  />,
                ],
              ],
              "virtual": undefined,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <Styled(Button)
                    className="all-categories"
                    onPress={[Function]}
                    transparent={true}
                  >
                    <Styled(Text)
                      style={
                        Object {
                          "color": "black",
                          "fontFamily": "OpenSans-Regular",
                          "fontSize": 18,
                          "paddingLeft": 5,
                        }
                      }
                    >
                      Todos
                    </Styled(Text)>
                  </Styled(Button)>,
                  "className": "list-categories",
                  "onPress": [Function],
                  "style": Object {
                    "justifyContent": "center",
                  },
                  "virtual": undefined,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <Styled(Text)
                      style={
                        Object {
                          "color": "black",
                          "fontFamily": "OpenSans-Regular",
                          "fontSize": 18,
                          "paddingLeft": 5,
                        }
                      }
                    >
                      Todos
                    </Styled(Text)>,
                    "className": "all-categories",
                    "onPress": [Function],
                    "transparent": true,
                    "virtual": undefined,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Todos",
                      "style": Object {
                        "color": "black",
                        "fontFamily": "OpenSans-Regular",
                        "fontSize": 18,
                        "paddingLeft": 5,
                      },
                      "virtual": undefined,
                    },
                    "ref": null,
                    "rendered": "Todos",
                    "type": [Function],
                  },
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "0",
                "nodeType": "class",
                "props": Object {
                  "data": Object {
                    "id": 1,
                    "name": "Category 1",
                  },
                  "language": "PT",
                  "onPress": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "1",
                "nodeType": "class",
                "props": Object {
                  "data": Object {
                    "id": 2,
                    "name": "Category 2",
                  },
                  "language": "PT",
                  "onPress": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "2",
                "nodeType": "class",
                "props": Object {
                  "data": Object {
                    "id": 3,
                    "name": "Category 3",
                  },
                  "language": "PT",
                  "onPress": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
